name: PARL CI
on: 
  pull_request:
    branches:
    - develop

jobs:

  CheckStyle:
    name: CheckStyle
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Check Style
        run: |
          ls
          pwd
          cat .github/workflows/*.yml
          bash .teamcity/action_build.sh check_style

  PaddleTest:
    name: UnitTestPaddle
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Package
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
          sudo apt-get install -y libgflags-dev libunwind-dev libgoogle-glog-dev libomp-dev unzip
          sudo apt-get install -y libgtest-dev && cd /usr/src/gtest && sudo mkdir build && cd build && sudo cmake .. 
          sudo make && ls -l lib && sudo cp lib/libgtest*.a /usr/local/lib
          md5sum /usr/src/googletest/googletest/build/lib/*.a && md5sum lib/*.a 

      - name: Run Paddle tests
        run: |
          bash .teamcity/action_build.sh test_paddle

  TorchTest:
    name: UnitTestTorch
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Package
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
          sudo apt-get install -y libgflags-dev libunwind-dev libgoogle-glog-dev libomp-dev unzip
          sudo apt-get install -y libgtest-dev && cd /usr/src/gtest && sudo mkdir build && cd build && sudo cmake .. 
          sudo make && ls -l lib && sudo cp lib/libgtest*.a /usr/local/lib
          md5sum /usr/src/googletest/googletest/build/lib/*.a && md5sum lib/*.a 

      - name: Run Torch tests
        run: |
          bash .teamcity/action_build.sh test_torch

  ExampleTest:
    name: TestExamples
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Package
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
          sudo apt-get install -y libgflags-dev libunwind-dev libgoogle-glog-dev libomp-dev unzip
          sudo apt-get install -y libgtest-dev && cd /usr/src/gtest && sudo mkdir build && cd build && sudo cmake .. 
          sudo make && ls -l lib && sudo cp lib/libgtest*.a /usr/local/lib
          md5sum /usr/src/googletest/googletest/build/lib/*.a && md5sum lib/*.a 

      - name: Run Example tests
        run: |
          bash .teamcity/action_build.sh example
